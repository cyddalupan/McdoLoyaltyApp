{"version":3,"sources":["facebook_update.js","facebook_user.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrfile":"all.js","sourcesContent":["var allPostCountLoad2 = 0;\n\n$(document).ready(function(){\n\t$('.cyd-update-points').click(function(){\n\n\t\t$('.num_point').html('<img src=\"'+public_url+'IMG/loading.gif\" width=\"25px\" height=\"25px\" >');\n\t\t$('.num_post').html('<img src=\"'+public_url+'IMG/loading.gif\" width=\"25px\" height=\"25px\" >');\n\t\tfacebook_getLastScan();\n\n\t\t$(\".cyd-update-points\").hide(1);\n\t});\n});\n//get current users last scan date\nfunction facebook_getLastScan(){\n\tuser_fb_id = global_user_fb_id;\n\tlong_token_data = global_long_token_data;\n\tconsole.log('Getting Last Scan Date');\n\t//call ajax\n    var url=public_url+\"last_scan/\"+user_fb_id;\n\tvar pmeters=\"\";\n\t$.post(url,pmeters,function(lastScanUnixDate){\n\t\tconsole.log('The Last scan Date is '+ lastScanUnixDate);\n\t\tfacebook_update_points(user_fb_id,long_token_data,lastScanUnixDate);\n\t});\n}\n\n//seek facebook post data of this user\nfunction facebook_update_points(user_fb_id,long_token_data,lastScanUnixDate){\n\tconsole.log('Getting post from Facebook');\n\tif(lastScanUnixDate == 0)\n\t\taddscandate = '';\n\telse\n\t\taddscandate = \".since(\"+lastScanUnixDate+\")\";\n\n\tfacebookPosts = '';\n\tfacebookStatus = '';\n\tFB.api(\n\t    \"/v2.2/me?fields=id,name,statuses\"+addscandate+\",posts\"+addscandate+\".limit(30){message,story,privacy,likes,updated_time}&access_token=\"+long_token_data,\n\t    function (feed_response) {\n\t      if (feed_response && !feed_response.error) {\n\t      \tif ((typeof feed_response.posts != 'undefined') || (typeof feed_response.statuses != 'undefined')) {\n\t\t      \tconsole.log(\"Get User Post Successful!\");\n\t\t      \tconsole.log(feed_response);\n\n\t\t      \tif(typeof feed_response.posts != 'undefined')\n\t\t      \t\tfacebookPosts = feed_response.posts.data;\n\n\t\t      \tif(typeof feed_response.statuses != 'undefined')\n\t\t\t      \tfacebookStatus = feed_response.statuses.data;\n\n\t\t      \tfacebook_insert_to_post(user_fb_id,facebookPosts,facebookStatus,long_token_data);\n\t\t\t}else{\n\t\t\t\tconsole.log(\"No New Facebook Post!\");\n\t\t\t\tfacebook_update_likes(user_fb_id,long_token_data);\n\t\t\t}\n\t      }else{\n\t      \tconsole.log(\"*Cant Get User Points. Retry in 10 seconds\");\n\t\t\tsetTimeout(function() {facebook_update_points(user_fb_id,long_token_data,lastScanUnixDate);}, 10000);\n\t      }\n\t    }\n\t);\n}\n\n//Process User Posts\nfunction facebook_insert_to_post(user_fb_id,facebookPosts,facebookStatus,long_token_data){\n\tconsole.log('Saving Post to DB');\n\t$.post( public_url+'save_post', {fbid:user_fb_id , fbposts:facebookPosts , fbstatus:facebookStatus} , function( save_post_result ) {\n\t\t\tconsole.log(save_post_result);\n\t\t\tfacebook_update_likes(user_fb_id,long_token_data);\n\t}).fail(function() {\n\t\tconsole.log('*Failed Saving Post to DB Retry in 10 seconds');\n\t\tsetTimeout(function() {facebook_insert_to_post(user_fb_id,facebookPosts,long_token_data);}, 10000);\n\t});\n}\n\n//update likes of posts\nfunction facebook_update_likes(user_fb_id,long_token_data){\n\tconsole.log(\"Getting All Post Id using Facebook Id\");\n\t$.post( public_url+'all_post_id', {fbid:user_fb_id},function( allPostID ) {\n\t\tconsole.log(\"All Post Id = \"+allPostID);\n\t\tallPostCountLoad2 = allPostID.length;\n\t\tfacebook_fetchNewLikeCount(user_fb_id,allPostID,long_token_data);\n\t}, \"json\").fail(function() {\n\t\tconsole.log(\"*Can't get all Post ID, Retry in 10 seconds\");\n\t\tsetTimeout(function() {facebook_update_likes(user_fb_id,long_token_data);}, 10000);\n\t});\n}\n\n//get the like count of post on facebook\nfunction facebook_fetchNewLikeCount(user_fb_id,allPostID,long_token_data){\n\tconsole.log(\"Getting Count Of Likes On facebook\");\n\t//put loop count to zero. this function will loop to all post needs to start with zero\n\tloopCount = 0;\n\n\tif(allPostID.length > 0){\n\t\tfacebook_getEachPostLike(user_fb_id,allPostID,long_token_data,loopCount);\n\t}else{\n\t\tconsole.log(\"*User has No Post Yet\");\n\t\tfacebook_change_points(0);\n\t}\n}\n\n\n//Declare Object\nObjectLikeCount = {};\n//update facebook like\nfunction facebook_getEachPostLike(user_fb_id,allPostID,long_token_data,loopCount){\n\tconsole.log(\"Getting like Count for post \"+allPostID[loopCount]);\n\t//1036357483047530_1071799132836698?fields=shares,likes.summary(true),comments.summary(true)\n\tFB.api(\n\t    \"/v2.2/\"+allPostID[loopCount]+\"/likes?summary=true&access_token=\"+long_token_data,\n\t    function (postLikeCount) {\n\t      \tif (postLikeCount && !postLikeCount.error) {\n\t      \t\tLikeCount = postLikeCount.summary.total_count;\n      \t\t\tfacebook_pushToObject(allPostID,loopCount,LikeCount,user_fb_id,long_token_data);\n\t      \t}else{\n\t      \t\tconsole.log(\"*Cant Get Points Like Count.\");\n\t      \t}\n\t    }\n\t);\n}\n\n//insert value to a object\nfunction facebook_pushToObject(allPostID,loopCount,LikeCount,user_fb_id,long_token_data){\n    console.log(\"Successful [\"+allPostID[loopCount]+\"] likes = \"+LikeCount+\" loopCount = \"+loopCount);\n\t//insert to an object\n\tpushObject = {\n\t\tpostid : allPostID[loopCount],\n\t\tlikeCount : LikeCount,\n\t};\n\t//push object to parent object\n\tObjectLikeCount[loopCount] = pushObject;\n\n  \t//used for looping this same function. the count on the array\n  \tloopCount++;\n\n  \t//test if loopCount reach na maximum array length\n  \tif(loopCount < allPostID.length){\n  \t\t//add delay for safe scan\n  \t\tsetTimeout(function() {\n  \t\t\t//call this same function but different loopCount.\n\t\t\tfacebook_getEachPostLike(user_fb_id,allPostID,long_token_data,loopCount);\n\t\t}, 2000);\n  \t}else{\n  \t\tconsole.log(\"All Post(Likes(Count)) Has been Updated\");\n  \t\tfacebook_update_postLike_DB(user_fb_id,long_token_data,ObjectLikeCount);\n  \t}\n}\n\n//sending javascript object to php to update like count\nfunction facebook_update_postLike_DB(user_fb_id,long_token_data,ObjectLikeCount){\n\tconsole.log(\"Updating postLikeCount on DB...\");\n\t$.post(public_url+'updateLikes', ObjectLikeCount, function( updateCountLikeResult ) {\n\t\tconsole.log(updateCountLikeResult);\n\t\tfacebook_update_php_points(user_fb_id);\n\t}).fail(function() {\n\t\tconsole.log(\"*Can't Update LikesCount DB Retry In 10 seconds\");\n\t\tsetTimeout(function() {facebook_update_postLike_DB(user_fb_id,long_token_data,ObjectLikeCount);}, 10000);\n\t});\n}\n\n//update user points by adding all likes and points on the db\nfunction facebook_update_php_points(user_fb_id){\n\tconsole.log(\"Updating Your Points\");\n\t$.post( public_url+'update_points', {fbid:user_fb_id},function( TotalPoints ) {\n\t\tconsole.log(TotalPoints.Message);\n\t\tfacebook_change_points(TotalPoints.totalpost);\n\t}, \"json\").fail(function() {\n\t\tconsole.log(\"*Can't Update Your Points\");\n\t\tsetTimeout(function() {facebook_update_php_points(user_fb_id);}, 10000);\n\t});\n}\n\nfunction facebook_change_points(totalpoints){\n\t//update points on frontend\n\t$('.num_point').text(totalpoints);\n\t$('.num_post').text(allPostCountLoad2);\n\n\t$('.onoff').fadeIn('slow');\n\n\t//$(\".cyd-update-points\").show('slow');\n}","var global_user_fb_id;\nvar global_long_token_data;\nwindow.fbAsyncInit = function() {\n\tFB.init({\n\t  appId      : cyd_app_id,\n\t  xfbml      : true,\n\t  version    : 'v2.2'\n\t});\n\n\t// ADD ADDITIONAL FACEBOOK CODE HERE\n\tFB.Canvas.setSize({ width: 800, height: 1200 });\n\t\n\t//check if user is log in\n\tFB.getLoginStatus(function(response) {\n\t  // Check login status on load\n\t  if (response.status == 'connected') {\n\t  \t$('.notYetJoin').hide(1);\n\t  \tfacebook_login(response);\n\t  } else {\n\t  \t$('.fb_joined').hide(1);\n\t    facebook_not_login(response);\n\t  }\n\t});\n\n};//end of facebook JS\n(function(d, s, id){\n\t var js, fjs = d.getElementsByTagName(s)[0];\n\t if (d.getElementById(id)) {return;}\n\t js = d.createElement(s); js.id = id;\n\t js.src = \"//connect.facebook.net/en_US/sdk.js\";\n\t fjs.parentNode.insertBefore(js, fjs);\n}(document, 'script', 'facebook-jssdk'));\n\n//FUNCTIONS\n//if user is not yet log on facebook\nfunction facebook_not_login(response){\n  \tconsole.log(\"*User is not Log\");\n\t//when join is clicked\n\t$('.join_me_in').click(function(){\n  \t\tconsole.log(\"Make User Log\");\n\t    FB.login(function(response) {\n\t\t\tif (response.authResponse) {\n\t\t\t\tconsole.log('Welcome!  Fetching your information.... ');\n\t\t\t\tFB.api('/me', function(response) {\n\t\t\t\t\t//user accept\n\t  \t\t\t\tconsole.log(\"user accept fb-login\");\n\t\t\t\t\twindow.location=\"user/\"+response.id;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconsole.log('User cancelled login or did not fully authorize.');\n\t\t\t}\n\t    }, {scope: 'public_profile,user_birthday,read_stream,publish_actions'});\n    });\t\n}\n\n//if user is alredy log in facebook\nfunction facebook_login(response){\n  \tconsole.log(\"User is Log, Getting facebook Access Token\");\n\t//get token\n\tcyd_token = '';\n\tFB.getLoginStatus(function(response) {\n\t  if (response.status === 'connected') {\n\t    cyd_token = response.authResponse.accessToken;\n\t    facebook_token_generated(response,cyd_token);\n\t  }else{\n\t  \tfacebook_no_token(response);\n\t  }\n\t});\n}\n\n//if facebook token cannot generate\nfunction facebook_no_token(){\n\tconsole.log('*No Access Token Retry In 10 seconds');\n\tsetTimeout(function(){location.reload();}, 10000);\n}\n\n//when generating facebook token is successful\nfunction facebook_token_generated(response,cyd_token){\n    console.log(\"Access Token Generated, Getting User Info\");\n\tFB.api(\"/v2.2/me?fields=name,gender,birthday&access_token=\"+cyd_token,\n\t    function (response) {\n\t      if (response && !response.error) {\n\t      \tfacebook_user_retrieve_success(response,cyd_token);\n\t      }else{\n\t      \tfacebook_cant_get_api(response);\n\t      }\n\t    }\n\t);\n}\n\n//if user info cant be retrieve because of api\nfunction facebook_cant_get_api(response){\n\tconsole.log(\"*Can't get facebook data Retry In 10 seconds\");\n\tsetTimeout(function() {facebook_get_token(response);}, 10000);\n}\n\n//if Getting user info was a success\nfunction facebook_user_retrieve_success(response,cyd_token){\n\tconsole.log(\"Getting user info Success!\");\n\t//start ajax\n\t$.post( public_url+'all_fb_id', function( facebook_ids ) {\n\t\tconsole.log(\"Getting All User ID Success!\");\n\t\tfacebook_convert_token(response,cyd_token,facebook_ids);\n\t}, \"json\").fail(function() {\n\t\tconsole.log(\"*Can't get all Post ID, Retry in 10 seconds\");\n\t\tsetTimeout(function() {facebook_user_retrieve_success(response,cyd_token);}, 10000);\n\t});\n}\n\n//convert token to long term\nfunction facebook_convert_token(response,cyd_token,facebook_ids){\n\tconsole.log('Convert token to long term');\n\t//start ajax\n    var url=public_url+\"extend_token/\"+cyd_token;\n\tvar pmeters=\"\";\n\t$.post(url,pmeters,function(long_token_data){\n\t\tconsole.log('New Token is '+long_token_data);\n\t\t//test id if already on DB\n\t\t//put facebook_id to variable\n\t\tuser_fb_id = response.id;\n\t\t//find the position on array if exist\n\t\tposInArray = $.inArray(user_fb_id, facebook_ids );\n\t\t//if greater than 0 = already exist\n\t\tif(posInArray >= 0){\n\t\t\tconsole.log(\"User Already On DB\");\n\t\t\tfacebook_update_token(user_fb_id,long_token_data);\n\t\t}\n\t\t//else add to database\n\t\telse{\n\t\t\tfacebook_user_not_yet_in_db(response,long_token_data);\n\t\t}\n\t}).fail(function() {\n\t\tconsole.log(\"*Can't Extend Token\");\n\t\tsetTimeout(function() {facebook_convert_token(response,cyd_token,facebook_ids);}, 10000);\n\t});\n}\n\n//update/renew user facebook token\nfunction facebook_update_token(user_fb_id,long_token_data){\n\tconsole.log('Renew Facebook Token');\n\t//start ajax\n    var url=public_url+\"renew_token/\"+user_fb_id+\"/\"+long_token_data;\n\tvar pmeters=\"\";\n\t$.post(url,pmeters,function(data){\n\t\tconsole.log(data);\n\t\tglobal_user_fb_id = user_fb_id;\n\t\tglobal_long_token_data = long_token_data;\n\n/*\n\t\t$('.num_point').text(userPoints);\n\t\t$('.num_post').text(userTotalPost);\n\n\t\t$('.cyd-update-points').fadeIn('slow');\n*/\n\t\t$('.num_reward').text(userRewards);\n\t\tfacebook_getLastScan(user_fb_id,long_token_data);\n\n\n\t}).fail(function() {\n\t\tconsole.log(\"*Can't Renew Token, retry in 10\");\n\t\tsetTimeout(function() {facebook_update_token(user_fb_id,long_token_data);}, 10000);\n\t});\n}\n\n//if user is not yet on database. add it on DB\nfunction facebook_user_not_yet_in_db(response,long_token_data){\n\tconsole.log('user not yet on user DB');\n\t$.post( public_url+'insert_user',{userinfo:response,newToken:long_token_data} , function( insert_user_result ) {\n\t\tconsole.log(insert_user_result);\n\t\tfacebook_getLastScan(user_fb_id,long_token_data);\n\t}).fail(function() {\n\t\tconsole.log(\"*Can't Insert User to DB, Retry in 10 seconds\");\n\t\tsetTimeout(function(){facebook_user_not_yet_in_db(response,long_token_data);}, 10000);\n\t});\n}\n"],"sourceRoot":"/source/"}